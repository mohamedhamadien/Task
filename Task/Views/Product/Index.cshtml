@using Task.ViewModels;
@model List<ProductViewModel>
@{
    var pageSize = 3; // Number of products per page
    var currentPage = (int)Math.Floor((decimal)(ViewBag.Page ?? 1));
    var totalProducts = ViewBag.TotalProducts != null ? (int)ViewBag.TotalProducts : 0;
    var totalPages = (int)Math.Ceiling(totalProducts / (double)pageSize);
}

<div class="table-responsive">
    <form asp-action="Edit" method="post">
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th></th> 
                    @foreach (var product in Model)
                    {
                        <th>@product.ItemName</th>
                    }
                </tr>
            </thead>
            <tbody>
                <tr>
                    <th>Brand</th> 
                    @foreach (var product in Model)
                    {
                        <td>@product.Brand</td>
                    }
                </tr>
                <tr>
                    <th>Model</th> 
                    @foreach (var product in Model)
                    {
                        <td>@product.Model</td>
                    }
                </tr>
                <tr>
                    <th>Color</th> 
                    @foreach (var product in Model)
                    {
                        <td>@product.Color</td>
                    }
                </tr>
                <tr>
                    <th>Price</th>
                    @for (int i = 0; i < Model.Count; i++)
                    {
                        <td>
                            <input type="hidden" asp-for="@Model[i].ItemID" name="products[@i].ItemID" />
                            <input type="text" asp-for="@Model[i].Price" name="products[@i].Price" class="form-control" />
                        </td>
                    }
                </tr>
            </tbody>
        </table>
        <button type="submit" class="btn btn-success">Save</button>
    </form>
</div>

<nav aria-label="Page navigation">
    <ul class="pagination">
        @if (currentPage > 1)
        {
            <li class="page-item">
                <a class="page-link" href="?page=@(currentPage - 1)">Previous</a>
            </li>
        }
        @for (var i = 1; i <= totalPages; i++)
        {
            <li class="page-item @(currentPage == i ? "active" : "")">
                <a class="page-link" href="?page=@i">@i</a>
            </li>
        }
        @if (currentPage < totalPages)
        {
            <li class="page-item">
                <a class="page-link" href="?page=@(currentPage + 1)">Next</a>
            </li>
        }
    </ul>
</nav>
